import { JSX, useState, useRef } from "react";
import classes from './Card/Card.module.css'
// import dices from '../components/img/dices.png'

interface Rools {
    title: string,
    text: string,
    text1?: string,
    picture?: string;
}

export default function Rools(): JSX.Element {
    
    const [isTitle, setIsTitle] = useState("Об игре")
    const [infoToDisplay, setInfoToDisplay] = useState( "Dungeons & Dragons — настольная ролевая игра, в которой игроки создают уникальных персонажей и отправляются в фантастические приключения.  Игра состоит из 2х стадий. Сначала определяется персонаж, сбрасывются кубики для определение характеристик персонажа, рассы, класса итд. Выбирается имя. Далее Мастер игры рассказывает вводную историю мира, лор. Обычно весь сюжет заранее подготовлен и продуман им до мелочей. Придумывает и рассказывает происхождение персонажей, краткую биографию, определяет цели на игру. Мастер игры описыват окружающий мир, отвечает за взаимодействие с ним. Его словами вы общаетесь с НПС, его глазами вы видите. Т.е. полностью обеспечивает погружение в фантазийную вселенную. Кубики за игровых НПС бросаются, также, Мастером игры.")
    const currentTitle = useRef<HTMLOptionElement>(null);
    const [info1ToDisplay, setInfo1ToDisplay] = useState("")

    const roolsInfo: Rools[] = [
        {title: "Об игре", text: "Dungeons & Dragons — настольная ролевая игра, в которой игроки создают уникальных персонажей и отправляются в фантастические приключения.  Игра состоит из 2х стадий. Сначала определяется персонаж, сбрасывются кубики для определение характеристик персонажа, рассы, класса итд. Выбирается имя. Далее Мастер игры рассказывает вводную историю мира, лор. Обычно весь сюжет заранее подготовлен и продуман им до мелочей. Придумывает и рассказывает происхождение персонажей, краткую биографию, определяет цели на игру. Мастер игры описыват окружающий мир, отвечает за взаимодействие с ним. Его словами вы общаетесь с НПС, его глазами вы видите. Т.е. полностью обеспечивает погружение в фантазийную вселенную. Кубики за игровых НПС бросаются, также, Мастером игры.",},
        {title: "Кубики", text: "В игре Dungeons & Dragons есть несколько типов кубиков, которые обозначаются буквой Д и числом граней:",},
        {title: "Характеристики", text: "Характеристики определяются броском кубиков Д6. Вы бросаете четыре 6-гранных кости и складываете три наибольших результата этого броска. Например, у вас выпало 1, 4, 6 и 2, в таком случае запишите куда-нибудь число 12 (4 + 6 + 2). Характеристика влияет только определение класса и модификатора. Модификатор влияет на ход игры: бонус к броскам атаки, уклонения и любые проверки.", text1: "Модификатор расчитывается по формуле: Характеристика - 10 /2, затем округление в меньшую сторону. 14-10/2~ = 2"},
        {title: "Здоровье и Броня", text: "Здоровье определяется, как бросок кубика Д6 + наибольшая характеристика (НЕ модификатор). Например: СИЛА (12) + бросок кубика (5) = 17 Хит Поинтов.", text1: "Броня определяется, следующим образом: Тряпки 8, Ткань 10, Легкая броня 11, средняя 13, тяжёлая 18. Во время стадии боя, к любой броне, кроме тяжелой, добавляется ваш модификатор Ловкости."},
        {title: "Определение рассы и класса", text: "Определение рассы персонажа происходит из списка, в зависимости от броска двух кубиков Д6. Например, при броске 12 вы сможете выбрать любой доступный класс. Человек доступен при броске 1+",},
        {title: "Правила боя и Оружие", text1: "Чтобы нанести урон, нужно броском кубика Д20 + модификатор атаки, выкинуть значение, большее, чем показатель брони врага.  Механика атаки: бросок кубика соответствующего оружию + модификатор (дальние атаки и ближний бой с кубиком Д4 прибавляется ловкость, ближний бой c кубиком Д6, Д8 прибавляется сила, заклинания прибавляется интеллект) Бросок 20 на кубике Д20 =  крит (кидаете кубик снова и суммируете результат)", text: "В зависимости от оружия, при атаке, бросается кубик соответствующего типа. Д4 – кинжалы, короткие луки, кулаки. Д6 – луки, одноручное оружие, посох. Д8 – двуручное оружие, арбалеты.",},     
    ]

    const dice4: string = "Д4 (четырёхгранник) - Используется для расчёта небольшого урона, например, от кинжала или заклинаний вроде волшебной стрелы. Также применяется при определении эффектов некоторых заклинаний первого уровня."
    const dice6: string = "Д6 (шестигранник) - Стандартный кубик, которым решают урон от мечей, дубинок и многих заклинаний. Также используется для подсчёта очков характеристик персонажа при создании."
    const dice8: string = "Д8 (восьмигранник) - Применяется для оружия вроде двуручного меча или длинного лука. Также используется некоторыми классами для определения очков здоровья при повышении уровня."
    const dice12: string = "Д12 (двенадцатигранник) - Редкий, но важный кубик, часто ассоциирующийся с сокрушительным оружием, как, например, легендарное оружие."
    const dice20: string = "Д20 (двадцатигранник) - Самый главный кубик в D&D, используемый для большинства бросков, от атак до проверок характеристик. Кубики используются в разных ситуациях, например: Проверки характеристик. Решают, справился ли персонаж с задачей, зависящей от его навыков и характеристик (сила, ловкость, мудрость и т. д.). Броски атаки: определяют, попал ли удар по врагу. Спасброски: проверяют, избежал ли персонаж ловушки, магического эффекта или другого опасного воздействия. Урон: у каждого оружия или заклинания есть свой тип кубика для урона. Случайные события: кубики используются для определения случайных факторов: например, какая добыча найдена в сундуке или как реагирует NPC на действия игроков."
    const dice10: string = "Д10 (десятигранник) - Используется для мощного оружия или как часть процентного броска. Часто применяется для определения случайных событий по таблицам или проверки вероятностных событий."


    function handleSelectChange(event:any): void {
        const curRef = event.target.value
        const currentInfo:any = roolsInfo.filter(i => i.title === curRef)
        setIsTitle(currentInfo[0].title)
        setInfoToDisplay(currentInfo[0].text) 
        setInfo1ToDisplay(currentInfo[0].text1)        
 

    }

    return (
        <section className={classes.gameSectionRools}>
            <div style={{display: "flex", flexDirection: "column", alignItems: "center", gap: 10}}>
                <div style={{display: "flex", flexDirection: "row", alignItems: "center", gap: 15, paddingRight: 100}}>
                    <div className={classes.arrow}></div>
                    <select onChange={handleSelectChange} className={classes.h_rools}>
                    {roolsInfo.map((item:any, ind:any) => (<option ref={currentTitle} className={classes.option_info} key={ind+154} >{item.title}</option>))}                                
                    </select> 
                </div>   
  
                <p className={`${classes.p_rools} ${classes.p_rools2}`}> {infoToDisplay} </p>
                <p className={`${classes.p_rools} ${classes.p_rools2}`}> {info1ToDisplay} </p>
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice4}</p>)}
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice6}</p>)}
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice8}</p>)}
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice10}</p>)}
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice12}</p>)}
                {isTitle === "Кубики" && ( <p className={`${classes.p_rools} ${classes.p_rools1}`}>{dice20}</p>)}

                {isTitle === "Кубики" && (<div className={classes.diceImg}></div>)}
                {isTitle === "Определение рассы и класса" && (<div className={classes.racesIMG}></div>)}
                {isTitle === "Правила боя и Оружие" && (<div className={classes.weaponsIMG}></div>)}
                {isTitle === "Здоровье и Броня" && (<div className={classes.defenceIMG}></div>)}
                {isTitle === "Характеристики" && (<div className={classes.charIMG}></div>)}
                {isTitle === "Об игре" && (<div className={classes.DNDIMG}></div>)}

            </div>
            

        </section>

    )
}